# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
    paths: 'demo300/**'
  pull_request:
    branches: [ "master" ]
    paths: 'demo300/**'

defaults:
  run:
    working-directory: demo300

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: 1. 리포지토리를 가져옵니다
      uses: actions/checkout@v3
      with:
          token: ${{ secrets.SUBMODULE_TOKEN }}
          submodules: recursive

    
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Add execution permission to gradlew
      run: chmod +x /home/runner/work/demo300/demo300/gradlew
    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build
    - name: Check Build log
      run:
          echo "you success build"

    - name: 2. 테스트 결과를 PR에 코멘트로 등록합니다
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
          files: '**/build/test-results/test/TEST-*.xml'

    - name: 3. 테스트 실패 시, 실패한 코드 라인에 Check 코멘트를 등록합니다
      uses: mikepenz/action-junit-report@v3
      if: always()
      with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          token: ${{ github.token }}
        
